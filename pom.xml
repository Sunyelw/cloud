<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.spring</groupId>
	<artifactId>cloud</artifactId>
	<version>V1.5.7</version>
	<packaging>pom</packaging>

	<modules>
		<module>springboot-kafka-consumer</module>
		<module>springboot-kafka-producer</module>
		<module>springcloud-config-server</module>
		<module>springcloud-config-client</module>
		<module>eureka_server</module>
		<module>eureka_provider</module>
		<module>eureka_provider_1</module>
        <module>eureka_provider_2</module>
		<module>eureka_consume</module>
		<module>feign_consume</module>
		<module>springcloud_database</module>
		<module>spring-practice-thread</module>
		<module>spring-code</module>
		<module>spring-task</module>
		<module>asia-config-server</module>
		<module>asia-kafka-consumer</module>
		<module>spring-web</module>
	</modules>

	<name>cloud</name>
	<description>springtboot multiModules</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

    <!-- 项目用了私服地址作为 central, 所以镜像代理不能代理 central -->
    <!-- 我的解决方式是在自己项目中添加阿里镜像作为 central -->
    <repositories>
        <repository>
            <id>central</id>
            <name>ALI_MAVEN_DEPENDENCY</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
        </repository>
    </repositories>

    <!--<pluginRepositories>-->
        <!--<pluginRepository>-->
            <!--<id>central</id>-->
            <!--<name>ALI_MAVEN_PLUGIN</name>-->
            <!--<url>http://maven.aliyun.com/nexus/content/groups/public</url>-->
        <!--</pluginRepository>-->
    <!--</pluginRepositories>-->

	<properties>
		<spring-cloud.version>Dalston.SR3</spring-cloud.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<java.version>1.8</java.version>
        <compile.version>1.8</compile.version>

		<lombok.version>1.16.18</lombok.version>
		<common.lang3.version>3.4</common.lang3.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${common.lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.32</version>
		</dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>

        <!-- 识别 yml 文件 -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
	</dependencies>

	<!-- SpringCloud 依赖版本管理 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
            <!-- eureka client -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-eureka-server</artifactId>
                <version>1.3.4.RELEASE</version>
            </dependency>
            <!-- eureka server -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-netflix-eureka-server</artifactId>
                <version>1.3.4.RELEASE</version>
            </dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>java -server -Xms128m -Xmx128m -XX:MaxMetaspaceSize=32m -XX:MaxGCPauseMillis=200 -DAsyncLogger.RingBufferSize=1048576 -DAsyncLoggerConfig.RingBufferSize=1048576 -Dlog4j2.AsyncQueueFullPolicy=ENQUEUE -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/logs/java_heapdump.hprof -jar /maven/${project.build.finalName}.jar
                    </jvmArguments>
                </configuration>
			</plugin>
		</plugins>
	</build>

</project>
